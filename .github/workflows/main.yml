name: Actions 

on:
  pull_request: {}
  push: { branches: [master] }
 
env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
 
jobs:

  Build:
    name: Build the Project
    runs-on: ubuntu-latest
    steps:
     
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
     
      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library
 
      # Test
      - name: Run tests
        uses: webbertakken/unity-test-runner@v1.3
        with:
          unityVersion: 2019.3.9f1
 
      # Build
      - name: Build project
        uses: webbertakken/unity-builder@v0.10
        with:
          unityVersion: 2019.3.9f1
          targetPlatform: StandaloneWindows64
 
      # Output 
      - uses: actions/upload-artifact@v1
        with:
          name: BuiltProject
          path: build

  Release :
    name: Release the project
    runs-on : ubuntu-latest
    needs : Build 
    steps:
        - name: Download files
          uses: actions/download-artifact@v2
          with:
           name: BuiltProject  
        - name: CompressTheFinalResult
          uses: thedoctor0/zip-release@master
          with:
           filename: BuiltProject.zip
        - name: Create Github Release
          id: create-new-release 
          uses: actions/create-release@v1
          env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          with:
           tag_name: v${{ github.run_number }}
           release_name: Release v${{ github.run_number }}
        - name: Upload to GitHub Release
          uses: actions/upload-release-asset@v1
          env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
           upload_url: ${{ steps.create-new-release.outputs.upload_url  }} 
           asset_path: ./BuiltProject.zip
           asset_name: BuiltProject-v${{ github.run_number }}.zip
           asset_content_type: application/zip






